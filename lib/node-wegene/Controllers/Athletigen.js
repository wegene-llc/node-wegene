/**
 * node-wegene
 *
 * This file was automatically generated by APIMATIC BETA v2.0 on 02/19/2016
 */

var request = require('../Http/Client/RequestClient'),
    configuration = require('../configuration'),
    APIHelper = require('../APIHelper');

var Athletigen = {

  /**
    * Athletigen based on genetic information
    * @param {string} profileId    Required parameter: Genetic profile Id
    * @param {string} reportId    Required parameter: Report Id for the specific athletigen to look
    * @param {function} callback    Required parameter: Callback function in the form of function(error, response)
    *
    * @return {Report}
  */
  getAthletigen : function(profileId, reportId, callback){

    //prepare query string for API call;
    var baseUri = configuration.BASEURI;

    var queryBuilder = baseUri + "/athletigen/{profile_id}";

    //Process template parameters
    queryBuilder = APIHelper.appendUrlWithTemplateParameters(queryBuilder, {
        "profile_id" : profileId
    });

    //validate and preprocess url
    var queryUrl = APIHelper.cleanUrl(queryBuilder);

    //prepare headers
    var headers = {
        "accept" : "application/json",
        "Authorization" : "Bearer " + configuration.oAuthAccessToken
    };

    //prepare form data
    var form = {
        "report_id" : reportId
    };

    //Remove null values
    APIHelper.cleanObject(form);

    //Construct the request
    var options = {
        queryUrl: queryUrl,
        method: "POST",
        headers: headers,
        form : form,
    };

    //Build the response processing.
    function cb(error, response, context) {
        if(error){
            callback({errorMessage: error.message, errorCode: error.code},null,context);
        }else if (response.statusCode >= 200 && response.statusCode <= 206) {
            callback(null,JSON.parse(response.body),context);
        }else{
            //Error handling using HTTP status codes
            callback({errorMessage: "HTTP Response Not OK", errorCode: response.statusCode, errorResponse:response.body},null,context);
        }
    }
    request(options, cb);

  },

};

module.exports = Athletigen;
